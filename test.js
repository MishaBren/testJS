// –õ–æ–≥—ñ—á–Ω—ñ –û–ø–µ—Ä–µ—Ç–æ—Ä–∏

// const hamburger = 5
// const fries = 5

// if (hamburger && fries) {
//   console.log('–Ø —Å–∏—Ç–∏–π')
// }

// ----------------

// const hamburger = 3
// const fries = 1
// const kola = 1
// if (hamburger === 3 && kola === 1 && fries) {
//   console.log('–í—Å—ñ —Å–∏—Ç—ñ')
// } else {
//   console.log('M–∏ –π–¥–µ–º–æ –≥–µ—Ç—å')
// }

// ---------------------------

// const hamburger = 1
// const fries = 0
// const kola = 0
// if (hamburger && (kola || fries)) {
//   console.log('–í—Å—ñ —Å–∏—Ç—ñ')
// } else {
//   console.log('M–∏ –π–¥–µ–º–æ –≥–µ—Ç—å')
// }

// --------–¶–∏–∫–ª–∏--------------

// let num = 5
// while (num < 11) {
//   console.log(num)
//   num++
// }

// ----------------------

// let num = 20
// do {
//   console.log(num)
//   num--
// } while (num > 9)

// ----------------------------

// for (let i = 1; i < 8; i++) {
//   console.log(i)
// }

// ------------------

// for (let i = 1; i < 10; i++) {
//   if (i === 6) {
//     break
//   }
//   console.log(i)
// }

// ----------------------------------

// for (let i = 1; i < 10; i++) {
//   if (i === 6) {
//     continue
//   }
//   console.log(i)
// }

// ------–¶–∏–∫–ª–∏ –≤ –¶–∏–∫–ª–∞—Ö-------------

// for (let i = 0; i < 3; i++) {
//   console.log(i)
//   for (let j = 3; j < 5; j++) {
//     console.log(j)
//   }
// }

//------------------------------------

// *
// **
// ***
// ****
// *****
// ******
// *******

// let result = ''
// const lenght = 7

// for (let i = 1; i < lenght; i++) {
//   for (let j = 0; j < i; j++) {
//     result += '*'
//   }
//   result += '\n'
// }

// console.log(result)

// ------------------------------

// first: for (let i = 1; i < 3; i++) {
//   console.log(`First Level: ${i}`)
//   for (let j = 0; j < 3; j++) {
//     console.log(`Second Level: ${j}`)
//     for (let k = 0; k < 3; k++) {
//       if (k === 2) continue first
//       console.log(`Third Level: ${k}`)
//     }
//   }
// }

// ------------------------------------------

// first: for (let i = 1; i < 3; i++) {
//   console.log(`First Level: ${i}`)
//   for (let j = 0; j < 3; j++) {
//     console.log(`Second Level: ${j}`)
//     for (let k = 0; k < 3; k++) {
//       if (k === 2) break first
//       console.log(`Third Level: ${k}`)
//     }
//   }
// }

// ------------------------------------

// for (let i = 20; i > 10; i--) {
//   if (i === 13) {
//     break
//   }
//   console.log(i)
// }

// ----------------------------------

// for (let i = 2; i < 11; i += 2) {
//   console.log(i)
// }

// --------------------------

// for (let i = 2; i <= 16; i++) {
//   if (i % 2 === 0) {
//     continue
//   } else {
//     console.log(i)
//   }
// }

// let mass = []
// let num = 3
// while (num < 16) {
//   mass = num
//   console.log(mass)
//   num += 2
// }






// ----------------–ú–µ—Ç–æ–¥ –§—É–Ω–∫—Ü—ñ—ó--------------

// const bookShef = {
//   book: ['–ö–æ–±–∑–∞—Ä', '–ë—ñ–±–ª—ñ—è', '–ë—É–∫–≤–∞—Ä'],

//   //  ----------------add--------------
//   addBook(name) {
//     this.book.push(name)
//   },

//   // --------dell----
//   removeBook(bookName) {
//     const bookIndex = this.book.indexOf(bookName)
//     this.book.splice(bookIndex, 1)
//   },
// }
// // bookShef.addBook('–ê–±–µ—Ç–∫–∞')
// bookShef.removeBook('–ö–æ–±–∑–∞—Ä')
// console.log(bookShef.book)

// ---------------------------
// –§—É–Ω–∫—Ü—ñ—ó

// function sum(x, y, z) {
//   return x * y * z
// }

// let res = sum()
// console.log(res)

// // ------------–§—É–Ω–∫—Ü—ñ—è –ø–µ—Ä–µ–±–æ—Ä–∞
// function count(countFrom = 0, countTo = 10, step = 1) {
//   for (let i = countFrom; i <= countTo; i += step) {
//     console.log(i)
//     console.log(countTo * i)
//   }
// }

// count(11, 58, 6)

// -----------------------

// var step
// for (step = 0; step < 5; step++) {
//   // –ó–∞–ø—É—Å–∫–∞–µ—Ç—Å—è 5 —Ä–∞–∑, —Å —à–∞–≥–æ–º –æ—Ç 0 –¥–æ 4.
//   console.log('–ò–¥—ë–º 1 —à–∞–≥ –Ω–∞ –≤–æ—Å—Ç–æ–∫')
// }
// let i = 1
// do {
//   i += 1
//   console.log(i)
// } while (i < 5)
// ----------------------
// var n = 0
// var x = 0
// while (n < 9) {
//   n++
//   x += n
// }
// console.log(x, n)
// -------------------
// var x = 0
// var z = 0
// labelCancelLoops: while (true) {
//   console.log('–í–Ω–µ—à–Ω–∏–π —Ü–∏–∫–ª: ' + x)
//   x += 1
//   z = 1
//   while (true) {
//     console.log('–í–Ω—É—Ç—Ä–µ–Ω–Ω–∏–π —Ü–∏–∫–ª: ' + z)
//     z += 1
//     if (z === 10 && x === 10) {
//       break labelCancelLoops
//     } else if (z === 10) {
//       break
//     }
//   }
// }

// ------------------
// let obj = { model: 'AUDI A8', year: '2019', color: 'brown' }

// for (key in obj) {
//   console.log(`${key} = ${obj[key]}`)
// }
// -------------------------------------

// const number = 10

// for (let i = 0; i < number; i += 1) {
//   if (i % 2 === 0) {
//     continue
//   }

//   console.log('–ù–µ–ø–∞—Ä–Ω–µ i: ', i) // 1, 3, 5, 7, 9
// }

// const number = 10

// for (let i = 0; i < number; i++) {
//   if (i % 2 === 0) {
//   } else {
//     continue
//   }

//   console.log('–ù–µ–ø–∞—Ä–Ω–µ i: ', i) // 1, 3, 5, 7, 9
// }

// function a(massege, price) {
//   let words = massege.split(' ')
//   let chek = words.length * price
//   console.log(chek)
// }
// a('rty mkj lki', 1)

// function getTimeFromMinutes(minut) {
//   if (typeof minut !== 'number' || !Number.isInteger(minut) || minut < 0) {
//     return '–û—à–∏–±–∫–∞, –ø—Ä–æ–≤–µ—Ä—å—Ç–µ –¥–∞–Ω–Ω—ã–µ'
//   } else if (minut === 0 || minut > 600) {
//     return '–û—à–∏–±–∫–∞, –ø—Ä–æ–≤–µ—Ä—å—Ç–µ –¥–∞–Ω–Ω—ã–µ'
//   }
//   let a = ' '
//   a = minut / 60
//   hodunu = Math.trunc(a)
//   hvulunu = minut - hodunu * 60

//   if (hodunu === 0 || hodunu >= 5) {
//     return `–≠—Ç–æ ${hodunu} —á–∞—Å–æ–≤ –∏ ${hvulunu} –º–∏–Ω—É—Ç`
//   } else if (hodunu == 1) {
//     return `–≠—Ç–æ ${hodunu} —á–∞—Å –∏ ${hvulunu} –º–∏–Ω—É—Ç`
//   } else {
//     return `–≠—Ç–æ ${hodunu} —á–∞—Åa –∏ ${hvulunu} –º–∏–Ω—É—Ç`
//   }
// }

// console.log(typeof getTimeFromMinutes(130))

// function getTimeFromMinutes(minutesTotal) {
//   if (
//     typeof minutesTotal !== 'number' ||
//     minutesTotal < 0 ||
//     !Number.isInteger(minutesTotal)
//   ) {
//     return '–û—à–∏–±–∫–∞, –ø—Ä–æ–≤–µ—Ä—å—Ç–µ –¥–∞–Ω–Ω—ã–µ'
//   }
//   const hours = Math.floor(minutesTotal / 60)
//   const minutes = minutesTotal % 60
//   let hoursStr = ''
//   switch (hours) {
//     case 0:
//       hoursStr = '—á–∞—Å–æ–≤'
//       break
//     case 1:
//       hoursStr = '—á–∞—Å'
//       break
//     case 2:
//     case 3:
//     case 4:
//       hoursStr = '—á–∞—Å–∞'
//       break
//     default:
//       hoursStr = '—á–∞—Å–æ–≤'
//   }

//   return `–≠—Ç–æ ${hours} ${hoursStr} –∏ ${minutes} –º–∏–Ω—É—Ç`
// }

// –ú–µ—Å—Ç–æ –¥–ª—è –≤—Ç–æ—Ä–æ–π –∑–∞–¥–∞—á–∏

// function findMaxNumber(a, b, c, d) {
//   if (
//     typeof a !== 'number' ||
//     typeof b !== 'number' ||
//     typeof c !== 'number' ||
//     typeof d !== 'number'
//   ) {
//     return 0
//   } else {
//     return Math.max(a, b, c, d)
//   }
// }

// findMaxNumber(5, 265.5, 684)

// -----------------------------------------------------------
// (**) –ó–∞–¥–∞—á–∞ —Å —Å–æ–±–µ—Å–µ–¥–æ–≤–∞–Ω–∏–π –Ω–∞ —á–∏—Å–ª–∞ –§–∏–±–æ–Ω–∞—á—á–∏
// –≠—Ç–æ –æ–¥–Ω–∞ –∏–∑ –∫–ª–∞—Å—Å–∏—á–µ—Å–∫–∏—Ö –∑–∞–¥–∞—á –≤ –ø—Ä–æ–≥—Ä–∞–º–º–∏—Ä–æ–≤–∞–Ω–∏–∏ –Ω–∞ —Å–∞–º—ã—Ö —Ä–∞–∑–Ω—ã—Ö —è–∑—ã–∫–∞—Ö. –°–∫–æ—Ä–µ–µ –≤—Å–µ–≥–æ –≤—ã —Å–ª—ã—à–∞–ª–∏ –ø—Ä–æ —á–∏—Å–ª–∞ –§–∏–±–æ–Ω–∞—á—á–∏, –≥–¥–µ –ø–µ—Ä–≤—ã–µ –¥–≤–∞ —á–∏—Å–ª–∞ —Ä–∞–≤–Ω—ã 0 –∏ 1, –∞ –∫–∞–∂–¥–æ–µ –ø–æ—Å–ª–µ–¥—É—é—â–µ–µ —á–∏—Å–ª–æ —Ä–∞–≤–Ω–æ —Å—É–º–º–µ –¥–≤—É—Ö –ø—Ä–µ–¥—ã–¥—É—â–∏—Ö —á–∏—Å–µ–ª. –ò –Ω–∞ —Å–æ–±–µ—Å–µ–¥–æ–≤–∞–Ω–∏—è—Ö —á–∞—Å—Ç–æ –¥–∞—é—Ç –∑–∞–¥–∞—á–∏, —Å–≤—è–∑–∞–Ω–Ω—ã–µ —Å —ç—Ç–∏–º–∏ —á–∏—Å–ª–∞–º–∏. –ï—Å—Ç—å —Ä–∞–∑–Ω—ã–µ –≤–∞—Ä–∏–∞—Ü–∏–∏ –∏ —Ç—É—Ç –º—ã –ø–æ–ø—Ä–æ–±—É–µ–º —Ä–µ—à–∏—Ç—å –æ–¥–Ω—É –∏–∑ –Ω–∏—Ö.
// –°—Ä–∞–∑—É —Å–∫–∞–∂—É, —á—Ç–æ –µ—Å—Ç—å –≤–∞—Ä–∏–∞–Ω—Ç—ã —Ä–µ—à–µ–Ω–∏—è —á–µ—Ä–µ–∑ –ø—Ä–∏–µ–º, –Ω–∞–∑—ã–≤–∞–µ–º—ã–π —Ä–µ–∫—É—Ä—Å–∏—è. –û–Ω –¥–∞–ª—å—à–µ –ø–æ –∫—É—Ä—Å—É. –ù–æ —ç—Ç–æ—Ç –≤–∞—Ä–∏–∞–Ω—Ç –Ω—É–∂–Ω–æ —Ä–µ—à–∏—Ç—å –±–µ–∑ –µ—ë –ø—Ä–∏–º–µ–Ω–µ–Ω–∏—è. –¢–∞–∫–∏–µ —É—Å–ª–æ–≤–∏—è —á–∞—Å—Ç–æ —Å—Ç–∞–≤—è—Ç –Ω–∞ —Å–æ–±–µ—Å–µ–¥–æ–≤–∞–Ω–∏—è—Ö. –ö–æ–≥–¥–∞ –≤—ã –ø—Ä–æ–π–¥–µ—Ç–µ —É—Ä–æ–∫ –ø–æ —Ä–µ–∫—É—Ä—Å–∏–∏, –≤—ã –º–æ–∂–µ—Ç–µ –≤–µ—Ä–Ω—É—Ç—å—Å—è –≤ —ç—Ç–æ –∑–∞–¥–∞–Ω–∏–µ –∏ –ø–æ–ø—Ä–æ–±–æ–≤–∞—Ç—å —Ä–µ—à–∏—Ç—å –ø–æ –¥—Ä—É–≥–æ–º—É. –¢–∞–∫ –∂–µ –ø–æ–¥—Å–∫–∞–∑–∫—É (–Ω–æ –Ω–µ —Ä–µ—à–µ–Ω–∏–µ —ç—Ç–æ–π –∑–∞–¥–∞—á–∏) –º–æ–∂–Ω–æ –Ω–∞–π—Ç–∏ —Ç—É—Ç. –ù–æ –ø–æ—Å—Ç–∞—Ä–∞–π—Ç–µ—Å—å –Ω–µ –æ—Ç–∫—Ä—ã–≤–∞—Ç—å üôÇ
// –ó–∞–¥–∞—á–∞:
// –°–æ–∑–¥–∞–π—Ç–µ —Ñ—É–Ω–∫—Ü–∏—é, –∫–æ—Ç–æ—Ä–∞—è –±—É–¥–µ—Ç –ø—Ä–∏–Ω–∏–º–∞—Ç—å –≤ —Å–µ–±—è –æ–¥–∏–Ω –∞—Ä–≥—É–º–µ–Ω—Ç-—Ü–µ–ª–æ–µ –ø–æ–ª–æ–∂–∏—Ç–µ–ª—å–Ω–æ–µ —á–∏—Å–ª–æ. –û–Ω–∞ –¥–æ–ª–∂–Ω–∞ –≤–æ–∑–≤—Ä–∞—â–∞—Ç—å —Å—Ç—Ä–æ–∫—É, –≤ –∫–æ—Ç–æ—Ä–æ–π –±—É–¥—É—Ç —á–µ—Ä–µ–∑ –ø—Ä–æ–±–µ–ª –≤—ã–≤–µ–¥–µ–Ω—ã —á–∏—Å–ª–∞ –§–∏–±–æ–Ω–∞—á—á–∏. –ü—Ä–∏—á–µ–º, –∏—Ö –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –¥–æ–ª–∂–Ω–æ –±—ã—Ç—å —Ä–∞–≤–Ω–æ –ø–µ—Ä–µ–¥–∞–Ω–Ω–æ–º—É –∞—Ä–≥—É–º–µ–Ω—Ç—É.
// –ï—Å–ª–∏ –ø–µ—Ä–µ–¥–∞–Ω–Ω—ã–π –∞—Ä–≥—É–º–µ–Ω—Ç –Ω–µ —á–∏—Å–ª–æ - –≤–µ—Ä–Ω—É—Ç—å –ø—É—Å—Ç—É—é —Å—Ç—Ä–æ–∫—É. –†–µ—à–∞—Ç—å –±–µ–∑ –ø—Ä–∏–º–µ–Ω–µ–Ω–∏—è —Ä–µ–∫—É—Ä—Å–∏–∏.
// –ü—Ä–∏–º–µ—Ä:
// fib(4) => ''0 1 1 2"
// fib(7) => ''0 1 1 2 3 5 8"
// fib('7') => ''"
// fib(1) => "0"
// fib(0) => ''"
// –ó–∞–¥–∞—á–∞ –Ω–µ–ø—Ä–æ—Å—Ç–∞—è –¥–ª—è –Ω–æ–≤–∏—á–∫–æ–≤, —Ç–∞–∫ —á—Ç–æ —Å –ø–µ—Ä–≤–æ–≥–æ —Ä–∞–∑–∞ –º–æ–∂–µ—Ç –Ω–µ –ø–æ–ª—É—á–∏—Ç—Å—è.

// function fib(n) {
//   if (typeof n !== 'number' || !Number.isInteger(n) || n <= 0) {
//     return ''
//   }
//   let a = 0
//   b = 1
//   c = ''
//   k = ''
//   for (let i = 1; i <= n; i++) {
//     c = a + b
//     k += `${a}  `

//     a = b
//     b = c
//   }
//   return k
// }

// console.log(fib())

// -------------------------

// function fib(num) {
//   if (typeof num !== "number" || num <= 0 || !Number.isInteger(num)) {
//     return "";
//   }

//   let result = "";
//   let first = 0;
//   let second = 1;

//   for (let i = 0; i < num; i++) {
//     if (i + 1 === num) {
//       result += `${first}`;
//       // –ë–µ–∑ –ø—Ä–æ–±–µ–ª–∞ –≤ –∫–æ–Ω—Ü–µ
//     } else {
//       result += `${first} `;
//     }

//     let third = first + second;
//     first = second;
//     second = third;
//   }

//   return result;
// }

// console.log(fib("ssaf"));











// ------------------

// const arrayOfNumbers = []

// for (let i = 5; i < 11; i++) {
//   arrayOfNumbers[i - 5] = i
// }
// console.log(arrayOfNumbers)

// return arrayOfNumbers

// ----------------
// function secondTask() {
//   // –ó–Ω–∞—á–µ–Ω–∏—è –º–∞—Å—Å–∏–≤–∞ –º–µ–Ω—è—Ç—å –Ω–µ–ª—å–∑—è, —Ç—É—Ç –æ–Ω –ø—Ä–æ–≤–µ—Ä—è–µ—Ç—Å—è –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏ –∏–º–µ–Ω–Ω–æ –Ω–∞ —ç—Ç–∏ –∑–Ω–∞—á–µ–Ω–∏—è
//   const data = [5, 10, 'Shopping', 20, 'Homework']

//   // –ü–∏—à–µ–º —Ä–µ—à–µ–Ω–∏–µ –≤–æ—Ç —Ç—É—Ç
//   for (let i = 0; i < data.length; i++) {
//     if (typeof data[i] === 'number') {
//       data[i] = data[i] * 2
//     } else if (typeof data[i] === 'string') {
//       data[i] = `${data[i]} - done`
//     }
//   }
//   console.log(data)

//   // –ù–µ —Ç—Ä–æ–≥–∞–µ–º
//   return data
// }

// ----------------------------------- –†–æ–∑–≤–µ—Ä–Ω—É—Ç–∏ –º–∞—Å–∏–≤ REVERSE

// function thirdTask() {
//   const data = [5, 10, 'Shopping', 20, 'Homework']
//   const result = []

//   for (let i = 1; i <= data.length; i++) {
//     result[i - 1] = data[data.length - i]
//   }

//   console.log(result)
//   return result
// }

// thirdTask()

// ---------------------------------------–ü—ñ—Ä–∞–º—ñ–¥–∞

//      *
//     ***
//    *****
//   *******
//  *********
// ***********

// let result = "";
// const lines = 5;

// for (let i = 0; i <= lines; i++) {
//   for (let j = 1; j < lines - i; j++) {
//     result += ''
//   }
//   for (let j = 0; j < 2 * i + 1; j++) {
//     result += '*'
//   }
//   result += '\n'
// }
// console.log(result)

// for (let i = 0; i <= lines; i++) {
//   result += ''
//   for (let k = 0; k < lines - i; k++) {
//     result += ' '
//   }
//   for (let j = 0; j < 2 * i + 1; j++) {
//     result += '*'
//   }

//   result += '\n'
// }
// console.log(result)

// ------------------------------------–§–£–ù–ö–¶–Ü–á---------------------

// let num = 20

// function showFirstMassege(text) {
//   console.log(text)
//   num = 10
//   console.log(num)
// }

// showFirstMassege('Hello World')
// console.log(num)

// function calc(a, b) {
//   return a + b
// }

// console.log(calc(5, 8))
// console.log(calc(1, 45))
// console.log(calc(58, 42))
// console.log(calc(56, 9))

// function ret() {
//   let num = 50
//   return num
// }

// const anotherNum = ret()
// console.log(anotherNum)

// ---------------–©–µ –§—É–Ω–∫—ñ—ó--------------
//  -------------–ö–£–†–°–ò –í–ê–õ–Æ–¢------------

// const usdCurr = 28
// // const eurCurr = 32

// function convert(amount, curr) {
//   console.log(curr * amount)
// }

// convert(500, usdCurr)
// convert(250, eurCurr)

// ---------------------------------RETURN------------------------

// const usdCurr = 28
// const discount = 0.9

// function convert(amount, curr) {
//   console.log(curr * amount)
//   return curr * amount
// }

// function promotion(result) {
//   console.log(result * discount)
// }

// // promotion(convert(500, usdCurr))
// const res = convert(500, usdCurr)

// promotion(res)

// function test() {
//   for (let i = 0; i < 5; i++) {
//     console.log(i)
//     if (i === 3) return
//   }
//   console.log('done')
// }

// test()

// ------------------------------------------–ó–∞–¥–∞—á–∞----------------------

// –°–æ–∑–¥–∞–π—Ç–µ —Ñ—É–Ω–∫—Ü–∏—é, –∫–æ—Ç–æ—Ä–∞—è –±—É–¥–µ—Ç –Ω–∞ –≤—Ö–æ–¥ –ø—Ä–∏–Ω–∏–º–∞—Ç—å 1 –∞—Ä–≥—É–º–µ–Ω—Ç —Å –∏–º–µ–Ω–µ–º —á–µ–ª–æ–≤–µ–∫–∞ –∏ –≤–æ–∑–≤—Ä–∞—â–∞—Ç—å —Å—Ç—Ä–æ–∫—É.
// –ü—Ä–∏–º–µ—Ä: –≤—ã–∑–æ–≤ —Ñ—É–Ω–∫—Ü–∏–∏ sayHello('–ê–Ω—Ç–æ–Ω') –≤–æ–∑–≤—Ä–∞—â–∞–µ—Ç —Å—Ç—Ä–æ–∫—É "–ü—Ä–∏–≤–µ—Ç, –ê–Ω—Ç–æ–Ω!". –í —Ä–µ—à–µ–Ω–∏–∏ –≤—ã–∑—ã–≤–∞—Ç—å —Ñ—É–Ω–∫—Ü–∏—é –Ω–µ –Ω—É–∂–Ω–æ, –ø—Ä–æ–≥—Ä–∞–º–º–∞ —Å–¥–µ–ª–∞–µ—Ç —ç—Ç–æ –∑–∞ –≤–∞—Å.
// P.S. –≤–æ–∑–≤—Ä–∞—â–∞—Ç—å - —ç—Ç–æ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å –∫–ª—é—á–µ–≤–æ–µ —Å–ª–æ–≤–æ return.
// P.S.S. –≠—Ç–æ –∫–ª–∞—Å—Å–∏—á–µ—Å–∫–∞—è —Ñ—É–Ω–∫—Ü–∏—è-–º–æ–¥–∏—Ñ–∏–∫–∞—Ç–æ—Ä, –∫–æ—Ç–æ—Ä—ã—Ö –º—ã –¥–∞–ª—å—à–µ –ø–æ –∫—É—Ä—Å—É –±—É–¥–µ–º —Å–æ–∑–¥–∞–≤–∞—Ç—å –µ—â–µ –º–Ω–æ–≥–æ –≤ —Ä–∞–∑–Ω—ã—Ö –≤–∏–¥–∞—Ö.

// function sayHello(name) {
//   return `–ü—Ä–∏–≤–µ—Ç, ${name}!`
// }

// sayHello('–ê–Ω—Ç–æ–Ω')

// ---------------------------

// 2) –°–æ–∑–¥–∞–π—Ç–µ —Ñ—É–Ω–∫—Ü–∏—é, –∫–æ—Ç–æ—Ä–∞—è –ø—Ä–∏–Ω–∏–º–∞–µ—Ç –≤ —Å–µ–±—è 1 –∞—Ä–≥—É–º–µ–Ω—Ç –≤ –≤–∏–¥–µ —Ü–µ–ª–æ–≥–æ —á–∏—Å–ª–∞ –∏ –≤–æ–∑–≤—Ä–∞—â–∞–µ—Ç –º–∞—Å—Å–∏–≤ –∏–∑ —Ç—Ä–µ—Ö —á–∏—Å–µ–ª: –æ–¥–Ω–æ –Ω–∞ 1 –º–µ–Ω—å—à–µ, —Å–∞–º –∞—Ä–≥—É–º–µ–Ω—Ç, –∏ —á–∏—Å–ª–æ –Ω–∞ 1 –±–æ–ª—å—à–µ.

// –ü—Ä–∏–º–µ—Ä: –≤—ã–∑–æ–≤ —Ñ—É–Ω–∫—Ü–∏–∏ returnNeighboringNumbers(5) –≤–æ–∑–≤—Ä–∞—â–∞–µ—Ç –º–∞—Å—Å–∏–≤ –≤ –≤–∏–¥–µ [4, 5, 6].

// function returnNeighboringNumbers(num) {
//   return [num - 1, num, num + 1]
// }

// returnNeighboringNumbers(5)

// -------------------------------------------

// 3) –°–æ–∑–¥–∞–π—Ç–µ —Ñ—É–Ω–∫—Ü–∏—é, –∫–æ—Ç–æ—Ä–∞—è –±—É–¥–µ—Ç –ø—Ä–∏–Ω–∏–º–∞—Ç—å –≤ —Å–µ–±—è 2 –∞—Ä–≥—É–º–µ–Ω—Ç–∞, –æ–±–∞ —á–∏—Å–ª–∞. –ü–µ—Ä–≤–æ–µ —á–∏—Å–ª–æ - —ç—Ç–æ –±–∞–∑–∞, –≤—Ç–æ—Ä–æ–µ —á–∏—Å–ª–æ - —ç—Ç–æ —Å–∫–æ–ª—å–∫–æ —Ä–∞–∑ –Ω—É–∂–Ω–æ –±—É–¥–µ—Ç –ø–æ–≤—Ç–æ—Ä–∏—Ç—å —ç—Ç–æ —á–∏—Å–ª–æ –≤ –ø—Ä–æ–≥—Ä–µ—Å—Å–∏–∏. (–°–º–æ—Ç—Ä–∏ –ø—Ä–∏–º–µ—Ä –Ω–∏–∂–µ). –§—É–Ω–∫—Ü–∏—è –¥–æ–ª–∂–Ω–∞ –≤–æ–∑–≤—Ä–∞—â–∞—Ç—å —Å—Ç—Ä–æ–∫—É (–∏–ª–∏ —á–∏—Å–ª–æ –≤ –æ—Å–æ–±—ã—Ö —Å–ª—É—á–∞—è—Ö, –æ –∫–æ—Ç–æ—Ä—ã—Ö –Ω–∏–∂–µ), –≥–¥–µ —ç—Ç–∏ —á–∏—Å–ª–∞ –∏–¥—É—Ç –ø–æ –ø–æ—Ä—è–¥–∫—É, —Ä–∞–∑–¥–µ–ª–µ–Ω–Ω—ã–µ —Ç—Ä–µ–º—è –¥–µ—Ñ–∏—Å–∞–º–∏ "---". –ü–æ—Å–ª–µ –ø–æ—Å–ª–µ–¥–Ω–µ–≥–æ —á–∏—Å–ª–∞ –∏—Ö –Ω–µ –¥–æ–ª–∂–Ω–æ –±—ã—Ç—å.
// –ï—Å–ª–∏ –≤—Ç–æ—Ä–æ–π –∞—Ä–≥—É–º–µ–Ω—Ç –Ω–µ —è–≤–ª—è–µ—Ç—Å—è —á–∏—Å–ª–æ–º, —Ä–∞–≤–µ–Ω –∏–ª–∏ –º–µ–Ω—å—à–µ –Ω—É–ª—è - —Ç–æ –≤–æ–∑–≤—Ä–∞—â–∞—Ç—å –ø—Ä–æ—Å—Ç–æ –ø–µ—Ä–≤—ã–π –∞—Ä–≥—É–º–µ–Ω—Ç. (–ü—Ä–æ–≤–µ—Ä—è–µ–º —á–µ—Ä–µ–∑ –æ–ø–µ—Ä–∞—Ç–æ—Ä typeof)
// –ü—Ä–∏–º–µ—Ä—ã:
// –í—ã–∑–æ–≤ —Ñ—É–Ω–∫—Ü–∏–∏ getMathResult(5, 3) –¥–∞—Å—Ç –æ—Ç–≤–µ—Ç 5---10---15
// –í—ã–∑–æ–≤ —Ñ—É–Ω–∫—Ü–∏–∏ getMathResult(3, 10) –¥–∞—Å—Ç –æ—Ç–≤–µ—Ç 3---6---9---12---15---18---21---24---27---30
// –í—ã–∑–æ–≤ —Ñ—É–Ω–∫—Ü–∏–∏ getMathResult(10, 5) –¥–∞—Å—Ç –æ—Ç–≤–µ—Ç 10---20---30---40---50
// –í—ã–∑–æ–≤ —Ñ—É–Ω–∫—Ü–∏–∏ getMathResult(10, '5') –¥–∞—Å—Ç –æ—Ç–≤–µ—Ç 10
// –í—ã–∑–æ–≤ —Ñ—É–Ω–∫—Ü–∏–∏ getMathResult(10, 0) –¥–∞—Å—Ç –æ—Ç–≤–µ—Ç 10
// –í—ã–∑–æ–≤ —Ñ—É–Ω–∫—Ü–∏–∏ getMathResult(20, -5) –¥–∞—Å—Ç –æ—Ç–≤–µ—Ç 20
// –≠—Ç–∞ –∑–∞–¥–∞—á–∞ —É–∂–µ –±–ª–∏–∂–µ –∫ —Ä–µ–∞–ª—å–Ω–æ—Å—Ç–∏, –∫–æ–≥–¥–∞ –≤–∞–º –Ω—É–∂–Ω–æ —É—á–∏—Ç—ã–≤–∞—Ç—å –∏ —Ç–∏–ø –¥–∞–Ω–Ω—ã—Ö —É –∞—Ä–≥—É–º–µ–Ω—Ç–æ–≤, –ø—Ä–æ–≤–µ—Ä—è—Ç—å –∏—Ö –∏ –ø—Ä–æ–¥—É–º—ã–≤–∞—Ç—å –ª–æ–≥–∏–∫—É —Ä–∞–±–æ—Ç—ã –≤–Ω—É—Ç—Ä–∏. –û–±—Ä–∞—Ç–∏—Ç–µ –≤–Ω–∏–º–∞–Ω–∏–µ –Ω–∞ –ø—Ä–æ–≥—Ä–µ—Å—Å–∏—é, –æ–Ω–∞ —Ä–∞—Å—Å—á–∏—Ç—ã–≤–∞–µ—Ç—Å—è –ø–æ –ø—Ä–æ—Å—Ç–æ–π —Ñ–æ—Ä–º—É–ª–µ —É–º–Ω–æ–∂–µ–Ω–∏—è. –ï—Å–ª–∏ –ø–µ—Ä–≤—ã–π –∞—Ä–≥—É–º–µ–Ω—Ç 5, –∞ –≤—Ç–æ—Ä–æ–π 3, —Ç–æ —á–∏—Å–ª–æ –ø–æ–≤—Ç–æ—Ä—è–µ—Ç—Å—è 3 —Ä–∞–∑–∞, –∫–∞–∂–¥—ã–π —Ä–∞–∑ —É–≤–µ–ª–∏—á–∏–≤–∞—è—Å—å –Ω–∞ —Å–∞–º–æ —Å–µ–±—è. –≠—Ç–æ –±–∞–∑–æ–≤–∞—è –º–∞—Ç–µ–º–∞—Ç–∏–∫–∞, –∫–æ—Ç–æ—Ä–∞—è –∏ –Ω—É–∂–Ω–∞ –¥–ª—è —Ä–∞–±–æ—Ç—ã –≤ 95% —Å–ª—É—á–∞–µ –Ω–∞ —Ñ—Ä–æ–Ω—Ç–µ–Ω–¥–µ.
// –î–∞, –∑–∞–¥–∞—á–∞ —Å–ª–æ–∂–Ω–µ–µ, –Ω–æ –æ–Ω–∞ –ø—Ä–æ—Å—Ç–æ –æ–±—ä–µ–¥–∏–Ω—è–µ—Ç –≤—Å–µ —Ç–æ, —á—Ç–æ –º—ã —É–∂–µ —É—á–∏–ª–∏.

// function getMathResult(num, times) {
//   if (typeof times !== "number" || times <= 0) {
//     return num;
//   }

//   let str = "";

//   for (let i = 1; i <= times; i++) {
//     if (i === times) {
//       str += `${num * i}`;
//       // –¢—É—Ç –±–µ–∑ —á–µ—Ä—Ç–æ—á–µ–∫ –≤ –∫–æ–Ω—Ü–µ
//     } else {
//       str += `${num * i}---`;
//       // –≠—Ç–æ —Ç–æ–∂–µ —Å–∞–º–æ–µ, —á—Ç–æ –∏
//       // str = str + num * i + "---"
//     }
//   }
// }
// console.log(str);
// return str;

// function getMathResult(num, times) {
//   if (typeof (times) !== 'number' || times <= 0) {
//     return num;
//   }
//   let str = '';
//   for (let i = 1; i <= times; i++) {
//     if (i === times) {
//       str += `${num * i}`;
//     } else {
//       str += `${num * i}---`;
//     }
//   }
//   console.log(str)
//   return str;
// }
// getMathResult(5, 3)


// --------------------------–ó–ê–î–ê–ß–ê--------------


// 1) –°–æ–∑–¥–∞–π—Ç–µ —Ñ—É–Ω–∫—Ü–∏—é, –∫–æ—Ç–æ—Ä–∞—è –±—É–¥–µ—Ç –≤—ã—á–∏—Å–ª—è—Ç—å –æ–±—ä–µ–º –∏ –ø–ª–æ—â–∞–¥—å –ø–æ–ª–Ω–æ–π –ø–æ–≤–µ—Ä—Ö–Ω–æ—Å—Ç–∏ –∫—É–±–∞(—Ç–æ–∂–µ –±–∞–∑–æ–≤–∞—è –º–∞—Ç–µ–º–∞—Ç–∏–∫–∞, –∏–Ω–æ–≥–¥–∞ –∏—Å–ø–æ–ª—å–∑—É–µ—Ç—Å—è –≤ —Å–æ–∑–¥–∞–Ω–∏–∏ –∞–Ω–∏–º–∞—Ü–∏–π).–≠—Ç–∞ —Ñ—É–Ω–∫—Ü–∏—è –ø—Ä–∏–Ω–∏–º–∞–µ—Ç –≤ —Å–µ–±—è —Ü–µ–ª–æ–µ —á–∏—Å–ª–æ —Å–æ –∑–Ω–∞—á–µ–Ω–∏–µ–º –¥–ª–∏–Ω—ã —Ä–µ–±—Ä–∞ –∫—É–±–∞.–û—Ç–≤–µ—Ç –≤—ã–≤–µ–¥–∏—Ç–µ –≤ —Ñ–æ—Ä–º–∞—Ç–µ —Å—Ç—Ä–æ–∫–∏, –∫–æ—Ç–æ—Ä—ã–π –∏–∑–æ–±—Ä–∞–∂–µ–Ω –≤ –ø—Ä–∏–º–µ—Ä–∞—Ö.
// –ï—Å–ª–∏ –≤ —Ñ—É–Ω–∫—Ü–∏—é –ø–æ–ø–∞–ª –Ω–µ–ø—Ä–∞–≤–∏–ª—å–Ω—ã–π –∞—Ä–≥—É–º–µ–Ω—Ç –∏–ª–∏ –≤—ã—á–∏—Å–ª–∏—Ç—å –∑–Ω–∞—á–µ–Ω–∏—è –Ω–µ–≤–æ–∑–º–æ–∂–Ω–æ - –≤–µ—Ä–Ω—É—Ç—å —Å—Ç—Ä–æ–∫—É "–ü—Ä–∏ –≤—ã—á–∏—Å–ª–µ–Ω–∏–∏ –ø—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞"
// –ù–ï –ò–°–ü–û–õ–¨–ó–£–ô–¢–ï –û–ü–ï–†–ê–¢–û–† –°–¢–ï–ü–ï–ù–ò ** - –≤ –æ–Ω–ª–∞–π–Ω —Å—Ä–µ–¥–µ –±—Ä–∞—É–∑–µ—Ä–∞ –æ–Ω –Ω–µ —Ä–∞–±–æ—Ç–∞–µ—Ç –∏ —Ç–µ—Å—Ç—ã –±—É–¥—É—Ç –ª–æ–º–∞—Ç—å—Å—è.–≠—Ç–æ –∏–∑ - –∑–∞ —Ç–æ–≥–æ, —á—Ç–æ —ç—Ç–æ—Ç –æ–ø–µ—Ä–∞—Ç–æ—Ä –∏–∑ –±–æ–ª–µ–µ –Ω–æ–≤–æ–≥–æ —Å—Ç–∞–Ω–¥–∞—Ä—Ç–∞, —á–µ–º —Ç—É—Ç –¥–æ—Å—Ç—É–ø–µ–Ω.
//   –ü—Ä–∏–º–µ—Ä—ã:
// calculateVolumeAndArea(5)  => '–û–±—ä–µ–º –∫—É–±–∞: 125, –ø–ª–æ—â–∞–¥—å –≤—Å–µ–π –ø–æ–≤–µ—Ä—Ö–Ω–æ—Å—Ç–∏: 150'
// calculateVolumeAndArea(15)  => '–û–±—ä–µ–º –∫—É–±–∞: 3375, –ø–ª–æ—â–∞–¥—å –≤—Å–µ–π –ø–æ–≤–µ—Ä—Ö–Ω–æ—Å—Ç–∏: 1350'
// calculateVolumeAndArea(15.5)  => '–ü—Ä–∏ –≤—ã—á–∏—Å–ª–µ–Ω–∏–∏ –ø—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞'
// calculateVolumeAndArea('15')  => '–ü—Ä–∏ –≤—ã—á–∏—Å–ª–µ–Ω–∏–∏ –ø—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞'
// calculateVolumeAndArea(-15)  => '–ü—Ä–∏ –≤—ã—á–∏—Å–ª–µ–Ω–∏–∏ –ø—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞'


// function calculateVolumeAndArea(length) {
//   if (typeof (length) !== 'number' || length <= 0 || length % 1 !== 0) {
//     return "–ü—Ä–∏ –≤—ã—á–∏—Å–ª–µ–Ω–∏–∏ –ø—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞";
//   }
//   const s = length * length * 6;
//   const v = length * length * length;
//   return `–û–±—ä–µ–º –∫—É–±–∞: ${v}, –ø–ª–æ—â–∞–¥—å –≤—Å–µ–π –ø–æ–≤–µ—Ä—Ö–Ω–æ—Å—Ç–∏: ${s}`;
// }
// calculateVolumeAndArea(5);
// console.log(res);

// // ----------------------------------------

// function calculateVolumeAndArea() {

//   if (typeof (length) !== 'number' || length < 0 || !Number.isInteger(length)) {
//     return "–ü—Ä–∏ –≤—ã—á–∏—Å–ª–µ–Ω–∏–∏ –ø—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞";
//   }
//   let volume = 0,
//     area = 0;

//   volume = length * length * length;
//   // length ** 3 - —ç—Ç–æ —Ç–æ–∂–µ —Å–∞–º–æ–µ, —á—Ç–æ –∏ –≤—ã—à–µ –∏–ª–∏ –≤–∞—Ä–∏–∞–Ω—Ç—ã —á–µ—Ä–µ–∑ —Ü–∏–∫–ª.
//   // ** - —ç—Ç–æ –æ–ø–µ—Ä–∞—Ç–æ—Ä —Å—Ç–µ–ø–µ–Ω–∏, –Ω–∞–ø–æ–º–∏–Ω–∞—é. –ù–æ –æ–Ω–ª–∞–π–Ω —Ä–µ–¥–∞–∫—Ç–æ—Ä –µ–≥–æ –Ω–µ –ø—Ä–∏–Ω–∏–º–∞–µ—Ç =/
//   area = 6 * (length * length);

//   return `–û–±—ä–µ–º –∫—É–±–∞: ${volume}, –ø–ª–æ—â–∞–¥—å –≤—Å–µ–π –ø–æ–≤–µ—Ä—Ö–Ω–æ—Å—Ç–∏: ${area}`;
// }
// console.log(calculateVolumeAndArea(10))

// -------------------------------------------------------------------

// function getCoupeNumber(ticket) {
//   if (typeof (ticket) !== 'number' || !Number.isInteger(ticket) || ticket < 0) {
//     return "–û—à–∏–±–∫–∞. –ü—Ä–æ–≤–µ—Ä—å—Ç–µ –ø—Ä–∞–≤–∏–ª—å–Ω–æ—Å—Ç—å –≤–≤–µ–¥–µ–Ω–Ω–æ–≥–æ –Ω–æ–º–µ—Ä–∞ –º–µ—Å—Ç–∞";
//   } else if (ticket == 0 || ticket > 36) {
//     return "–¢–∞–∫–∏—Ö –º–µ—Å—Ç –≤ –≤–∞–≥–æ–Ω–µ –Ω–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç";
//   }
//   return Math.ceil(ticket / 4);
// }

// console.log(getCoupeNumber(12));

// ---------------------------TIME-----------------------------------------

// function getCoupeNumber(minut) {
//   if (typeof (minut) !== 'number' || !Number.isInteger(minut) || minut < 0) {
//     return "–û—à–∏–±–∫–∞, –ø—Ä–æ–≤–µ—Ä—å—Ç–µ –¥–∞–Ω–Ω—ã–µ";
//   } else if (minut == 0 || minut > 600) {
//     return "–û—à–∏–±–∫–∞, –ø—Ä–æ–≤–µ—Ä—å—Ç–µ –¥–∞–Ω–Ω—ã–µ";
//   }
//   let a = minut / 60;
//   hodunu = Math.trunc(a);
//   hvulunu = minut % 60;

//   if (hodunu == 0 || hodunu >= 5) {
//     return `–≠—Ç–æ ${hodunu} —á–∞—Å–æ–≤ –∏ ${hvulunu} –º–∏–Ω—É—Ç`;

//   } else if (hodunu == 1) {
//     return `–≠—Ç–æ ${hodunu} —á–∞—Å –∏ ${hvulunu} –º–∏–Ω—É—Ç`;

//   } else {
//     return `–≠—Ç–æ ${hodunu} —á–∞—Åa –∏ ${hvulunu} –º–∏–Ω—É—Ç`;
//   }
// }
// console.log(getCoupeNumber(38));

// ------------------------–û–±—î–∫—Ç–∏--------------------

// const object = {
//   name: 'Misha',
//   surname: 'Brenzovich',
//   car: {
//     first: 'Lada',
//     second: 'Opel',
//     third: 'BMW'
//   },
//   makeTest: function () {
//     console.log('Bravo');
//   }
// };

// for (let key in object) {
//   console.log(key);
// }

// object.makeTest();

// const { first, second } = object.car;

// console.log(first);

// console.log(Object.keys(object));



// --------------------------------------------------------–ú–ê–°–ò–í–ò-------------------------

// const mass = [1, 20, 3, 41, 5, 6, 7, 8];

// mass.sort(sortNum);

// function sortNum(a, b) {
//   return a - b;
// }
// console.log(mass)
// mass.forEach(function (item, i, mass) {
//   console.log(`${i}: ${item} –≤—Å–µ—Ä–µ–¥–∏–Ω—ñ –º–∞—Å–∏–≤—É ${mass}`)
// })
// mass.pop();
// mass.push(10);
// console.log(mass);
// console.log(mass.length);

// for (let i = 0; i < mass.length; i++) {
//   console.log(mass[i]);
// }

// for (let value of mass) {
//   console.log(value);
// }

// ------------------------------------------------LINEAR SEARCH------------

// const testMass = [1, 20, 3, 41, 5, 6, 7, 8];

// function LinearSearch(t, A)      // t - –∏—Å–∫–æ–º—ã–π —ç–ª–µ–º–µ–Ω—Ç,
// {                               // A - –º–∞—Å—Å–∏–≤, –≤ –∫–æ—Ç–æ—Ä–æ–º –∏—â–µ–º.
//   var n = A.length, i = 0;

//   A[n] = t;

//   while (A[i] !== t) i++;

//   if (i < n) return i;          // –ù–∞ –≤—ã—Ö–æ–¥–µ –∏–Ω–¥–µ–∫—Å –∏—Å–∫–æ–º–æ–≥–æ —ç–ª–µ–º–µ–Ω—Ç–∞.
//   else return -1;               // –ï—Å–ª–∏ –∏—Å–∫–æ–º–æ–≥–æ —ç–ª–µ–º–µ–Ω—Ç–∞ –Ω–µ—Ç –≤ –º–∞—Å—Å–∏–≤–µ, —Ç–æ -1.
// }
// console.log(LinearSearch(8, testMass));


// --------------------------------------

// const testMass = [1, 2, 3, 4, 5, 6, 7, 8];

// function BinarySearch(t, A)         // t - –∏—Å–∫–æ–º—ã–π —ç–ª–µ–º–µ–Ω—Ç,
// {                                  // A - —É–ø–æ—Ä—è–¥–æ—á–µ–Ω–Ω—ã–π –º–∞—Å—Å–∏–≤, –≤ –∫–æ—Ç–æ—Ä–æ–º –∏—â–µ–º.
//   var i = 0, j = A.length - 1, k;

//   while (i <= j) {
//     k = Math.floor((i + j) / 2);
//     if (t === A[k]) return k;
//     else if (t < A[k]) j = k - 1;
//     else i = k + 1;
//   }
//   // –ù–∞ –≤—ã—Ö–æ–¥–µ –∏–Ω–¥–µ–∫—Å –∏—Å–∫–æ–º–æ–≥–æ —ç–ª–µ–º–µ–Ω—Ç–∞.
//   return -1;                     // –ï—Å–ª–∏ –∏—Å–∫–æ–º–æ–≥–æ —ç–ª–µ–º–µ–Ω—Ç–∞ –Ω–µ—Ç –≤ –º–∞—Å—Å–∏–≤–µ, —Ç–æ -1.
// }
// console.log(BinarySearch(3, testMass));

// --------------------------------------------–ö–æ–ø—ñ—é–≤–∞–Ω–Ω—è –æ–±—î–∫—Ç—É-------------

// const object = {
//   name: 'Misha',
//   surname: 'Brenzovich',
//   car: {
//     first: 'Lada',
//     second: 'Opel',
//     third: 'BMW'
//   }
// };
// const copyObject = {};
// function copy(objCopy) {
//   for (let key in objCopy) {
//     copyObject[key] = objCopy[key];
//     // return copyObject;
//   }
// }
// copy(object);
// copyObject.name = 'dima';
// // const copyObject = object;
// // copyObject.name = 'dima';
// console.log(object);
// console.log(copyObject);
// const add = {
//   supercar: 'Lambo',
//   sportcar: 'GTR'
// };
// // console.log(Object.assign(copyObject, add));
// const clone = Object.assign({}, add);
// clone.newObj = 155;
// console.log(clone);
// console.log(add);

// -------------------------------------------------–ö–û–ü–Ü–Æ–í–ê–ê–ù–Ø –ú–ê–°–ò–í–£----------------------

// const arr = [1, 2, 3, 4, 5, 6, 7, 8];
// const copyArr = arr.slice();
// copyArr[1] = 'dsvsevsvs';
// console.log(arr);
// console.log(copyArr);
// // ----------

// const video = ['youTube', 'viteo', 'tiktok'];
// const blog = ['bloger', 'wordPress', 'liveJornal'];
// const internet = [...video, ...blog, 'telegram', 'facebook'];

// console.log(internet);

// ----------------------
// function log(a, b, c) {
//   console.log(a);
//   console.log(b);
//   console.log(c);
// }
// const num = [6, 5, 9];

// log(...num);

// const obj = {
//   one: 1,
//   two: 2
// };

// const newObj = { ...obj };
// newObj.three = 3;
// console.log(obj, newObj);


// --------------------------------------------------------–ó–∞–¥–∞—á–∞----------------


// const personalPlanPeter = {
//   name: "Peter",
//   age: "29",
//   skills: {
//     languages: ['ru', 'eng'],
//     programmingLangs: {
//       js: '20%',
//       php: '10%'
//     },
//     exp: '1 month'
//   },

//   showAgeAndLangs: function (plan) {
//     const { age } = plan;
//     const { languages } = plan.skills;
//     let str = `–ú–Ω–µ ${age} –∏ —è –≤–ª–∞–¥–µ—é —è–∑—ã–∫–∞–º–∏: `;

//     languages.forEach(function (lang) {
//       str += `${lang.toUpperCase()} `;
//     });
//     return str;
//   }
// };

// console.log(personalPlanPeter.showAgeAndLangs(personalPlanPeter)
// );

// function showProgrammingLangs(plan) {
//   let str = '';
//   const { programmingLangs } = plan.skills;
//   for (let key in programmingLangs) {
//     str += `–Ø–∑—ã–∫ ${key} –∏–∑—É—á–µ–Ω –Ω–∞ ${programmingLangs[key]}\n`
//   }
//   return str;
// }
// console.log(showProgrammingLangs(personalPlanPeter));

// function showExperience(plan) {
//   const { exp } = plan.skills;
//   return exp;
// }
// console.log(showExperience(personalPlanPeter));

// function showExperience(plan) {
//   let a = plan.skills.exp;
//   return `${a}`;
// }
// console.log(showExperience(personalPlanPeter));

// function showProgrammingLangs(plan) {
//   let a = { ...plan.skills.programmingLangs };
//   for (let key in a) {
//     console.log(`–Ø–∑–∏–∫ ${key} –∏–∑—É—á–µ–Ω –Ω–∞ ${a}`, a);
//   }
//   // const { js, php } = plan.skills.programmingLangs;
//   // return `–Ø–∑—ã–∫ js –∏–∑—É—á–µ–Ω –Ω–∞ ${js} –Ø–∑—ã–∫ php –∏–∑—É—á–µ–Ω –Ω–∞ ${php}`;
// }
// console.log(showProgrammingLangs(personalPlanPeter));

// --------------------------------

// –ù–∞–ø–∏—à–∏—Ç–µ —Ñ—É–Ω–∫—Ü–∏—é showFamily, –∫–æ—Ç–æ—Ä–∞—è –±—É–¥–µ—Ç –ø—Ä–∏–Ω–∏–º–∞—Ç—å –≤ —Å–µ–±—è –º–∞—Å—Å–∏–≤ —Å—Ç—Ä–æ–∫ –∏ –≤–æ–∑–≤—Ä–∞—â–∞—Ç—å —Å–æ–æ–±—â–µ–Ω–∏–µ –≤ –Ω—É–∂–Ω–æ–º —Ñ–æ—Ä–º–∞—Ç–µ.

//   showFamily(family)  => '–°–µ–º—å—è —Å–æ—Å—Ç–æ–∏—Ç –∏–∑: Peter Ann Alex Linda'

// –ò–º–µ–Ω–∞ –ø–æ–¥—Å—Ç–∞–≤–ª—è—é—Ç—Å—è –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏ –∏–∑ –º–∞—Å—Å–∏–≤–∞.–ï—Å–ª–∏ –º–∞—Å—Å–∏–≤ –ø—É—Å—Ç–æ–π, —Ç–æ –≤—ã–≤–æ–¥–∏—Ç—Å—è —Å–æ–æ–±—â–µ–Ω–∏–µ '–°–µ–º—å—è –ø—É—Å—Ç–∞'

// const family = ['Peter', 'Ann', 'Alex', 'Linda'];

// function showFamily(arr) {
//   if (arr.length === 0) {
//     let str = '';
//     str = `–°–µ–º—å—è –ø—É—Å—Ç–∞`;
//   }
//   else {
//     str = `–°–µ–º—å—è —Å–æ—Å—Ç–æ–∏—Ç –∏–∑: `;
//   }

//   arr.forEach(a => str += `${a} `)
//   return str;
// }
// console.log(showFamily(family));




// function showFamily(arr) {
//   let str = '';

//   arr.length === 0 ? str = '–°–µ–º—å—è –ø—É—Å—Ç–∞' : str = '–°–µ–º—å—è —Å–æ—Å—Ç–æ–∏—Ç –∏–∑: ';

//   arr.forEach(member => {
//     str += `${member} `;
//   });

//   return str;
// }

// showFamily(family);





// const arraySparse = [1, 3, , 7];
// let numCallbackRuns = 0;

// arraySparse.forEach((element) => {
//   console.log(element);
//   numCallbackRuns++;
// });

// console.log("numCallbackRuns: ", numCallbackRuns);


// const massiv = [1, 2, 3, 4, 5, 6, 7, 8, 9];
// massiv.forEach((a) => { console.log(a + 12); });

// ------------------------------

// const favoriteCities = ['liSBon', 'ROME', 'miLan', 'Dublin'];

// function standardizeStrings(arr) {
//   arr.forEach((element) => { console.log(element.toLowerCase()); });

// }
// standardizeStrings(favoriteCities)
// ---------------------------------------------------------

// –ó–∞–¥–∞—á–∞ —Å —Å–æ–±–µ—Å–µ–¥–æ–≤–∞–Ω–∏–π.–ù–∞–ø–∏—à–∏—Ç–µ —Ñ—É–Ω–∫—Ü–∏—é reverse, –∫–æ—Ç–æ—Ä–∞—è –ø—Ä–∏–Ω–∏–º–∞–µ—Ç –≤ —Å–µ–±—è —Å—Ç—Ä–æ–∫—É –∏ –≤–æ–∑–≤—Ä–∞—â–∞–µ—Ç —ç—Ç—É —Å—Ç—Ä–æ–∫—É –≤ –æ–±—Ä–∞—Ç–Ω–æ–º –ø–æ—Ä—è–¥–∫–µ.
//   –ü—Ä–∏–º–µ—Ä:
// const someString = 'This is some strange string';
// reverse(someString) => 'gnirts egnarts emos si sihT'
// –§—É–Ω–∫—Ü–∏—é –º–æ–∂–Ω–æ –ø—Ä–∏–º–µ–Ω–∏—Ç—å –∫ –ª—é–±–æ–π —Å—Ç—Ä–æ–∫–µ.–ï—Å–ª–∏ –≤ —Ñ—É–Ω–∫—Ü–∏—é –ø—Ä–∏—Ö–æ–¥–∏—Ç –Ω–µ —Å—Ç—Ä–æ–∫–∞ - –≤–µ—Ä–Ω—É—Ç—å —Å–æ–æ–±—â–µ–Ω–∏–µ "–û—à–∏–±–∫–∞!"
// –≠—Ç–æ –æ—á–µ–Ω—å –∏–Ω—Ç–µ—Ä–µ—Å–Ω–∞—è –∑–∞–¥–∞—á–∞, –∫–æ—Ç–æ—Ä—É—é –º–æ–∂–Ω–æ —Ä–µ—à–∏—Ç—å –Ω–µ—Å–∫–æ–ª—å–∫–∏–º–∏ —Å–ø–æ—Å–æ–±–∞–º–∏.–ï—ë –¥–∞—é—Ç –¥–ª—è —Ç–æ–≥–æ, —á—Ç–æ–±—ã –æ—Ü–µ–Ω–∏—Ç—å –Ω–∞–≤—ã–∫–∏ –∏ –∑–Ω–∞–Ω–∏—è –ø—Ä–æ–≥—Ä–∞–º–º–∏—Å—Ç–∞, –ø–æ—Å–º–æ—Ç—Ä–µ—Ç—å –∫–∞–∫ –æ–Ω –¥—É–º–∞–µ—Ç.–ö–∞–∫ –Ω–µ–±–æ–ª—å—à–∞—è –ø–æ–¥—Å–∫–∞–∑–∫–∞, –µ—Å—Ç—å –º–µ—Ç–æ–¥, –∫–æ—Ç–æ—Ä—ã–π –º–æ–∂–µ—Ç –≤–∞–º –ø–æ–º–æ—á—å.–ò —á–∞—Å—Ç—å –¥–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã—Ö –≤–∞—Ä–∏–∞–Ω—Ç–æ–≤ —Ä–µ—à–µ–Ω–∏—è –º—ã —Ç–æ–∂–µ –∏–∑—É—á–∏–º –≤ —Ç–µ—á–µ–Ω–∏–∏ –∫—É—Ä—Å–∞.
// –ú–æ–∂–µ—Ç –ø–æ–∫–∞–∑–∞—Ç—å —Å–ª–æ–∂–Ω–æ–π —Å –ø–µ—Ä–≤–æ–≥–æ –≤–∑–≥–ª—è–¥–∞, –Ω–æ —ç—Ç–æ —Å–æ–≤—Å–µ–º –Ω–µ —Ç–∞–∫ üôÇ


// let someString = 544;

// function reverse(str) {
//   if (typeof (str) !== 'string') {
//     return "–û—à–∏–±–∫–∞!";
//   }
//   // –°–∞–º—ã–π –æ–ø—Ç–∏–º–∞–ª—å–Ω—ã–π –≤–∞—Ä–∏–∞–Ω—Ç —Ä–µ—à–µ–Ω–∏—è
//   return str.split('').reverse().join('');
// }
// reverse(someString);
// console.log(someString);


// 4) –ü—Ä–µ–¥—Å—Ç–∞–≤—å—Ç–µ —Ç–∞–∫—É—é —Ä–µ–∞–ª—å–Ω—É—é —Å–∏—Ç—É–∞—Ü–∏—é.–£ –≤–∞—Å –µ—Å—Ç—å –±–∞–Ω–∫–æ–º–∞—Ç, –∫–æ—Ç–æ—Ä—ã–π –≤—ã–¥–∞–µ—Ç –¥–µ–Ω—å–≥–∏ –∏–∑ –¥–≤—É—Ö —Ä–∞–∑–Ω—ã—Ö –±–∞–Ω–∫–æ–≤ –≤ —Ä–∞–∑–Ω—ã—Ö –≤–∞–ª—é—Ç–∞—Ö.–û–¥–∏–Ω –±–∞–Ω–∫ –æ—Å–Ω–æ–≤–Ω–æ–π —Å –±–∞–∑–æ–≤—ã–º–∏ –≤–∞–ª—é—Ç–∞–º–∏, –≤—Ç–æ—Ä–æ–π –¥–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã–π —Å –ø—Ä–æ—á–∏–º–∏ –≤–∞–ª—é—Ç–∞–º–∏:
// const baseCurrencies = ['USD', 'EUR'];
// const additionalCurrencies = ['UAH', 'RUB', 'CNY'];

// –í–∞–º –Ω—É–∂–Ω–æ —Å–æ–∑–¥–∞—Ç—å –≥–ª–∞–≤–Ω—É—é —Ñ—É–Ω–∫—Ü–∏—é –±–∞–Ω–∫–æ–º–∞—Ç–∞ availableCurr, –∫–æ—Ç–æ—Ä–∞—è –ø—Ä–∏–Ω–∏–º–∞–µ—Ç –¥–≤–∞ –∞—Ä–≥—É–º–µ–Ω—Ç–∞: –ø–µ—Ä–≤—ã–π - —ç—Ç–æ –º–∞—Å—Å–∏–≤ —Å–æ –≤—Å–µ–º–∏ –¥–æ—Å—Ç—É–ø–Ω—ã–º–∏ –≤–∞–ª—é—Ç–∞–º–∏ –∏–∑ –¥–≤—É—Ö –±–∞–Ω–∫–æ–≤ —Å—Ä–∞–∑—É(—Å–µ–π—á–∞—Å –ø—Ä–µ–¥—Å—Ç–∞–≤–∏–º, —á—Ç–æ –æ–Ω–∏ –Ω–µ –º–æ–≥—É—Ç –ø–æ–≤—Ç–æ—Ä—è—Ç—å—Å—è), –≤—Ç–æ—Ä–æ–π - –Ω–µ–æ–±—è–∑–∞—Ç–µ–ª—å–Ω—ã–π –∞—Ä–≥—É–º–µ–Ω—Ç, –∫–æ—Ç–æ—Ä—ã–π —É–∫–∞–∑—ã–≤–∞–µ—Ç —Ç—É –≤–∞–ª—é—Ç—É, –∫–æ—Ç–æ—Ä–∞—è —Å–µ–π—á–∞—Å –∑–∞–∫–æ–Ω—á–∏–ª–∞—Å—å –≤ –±–∞–Ω–∫–æ–º–∞—Ç–µ.–ï—Å–ª–∏ –º–∞—Å—Å–∏–≤ –≤ –ø–µ—Ä–≤–æ–º –∞—Ä–≥—É–º–µ–Ω—Ç–µ –ø—É—Å—Ç–æ–π - —Ç–æ —Ñ—É–Ω–∫—Ü–∏—è –≤–æ–∑–≤—Ä–∞—â–∞–µ—Ç —Å—Ç—Ä–æ–∫—É '–ù–µ—Ç –¥–æ—Å—Ç—É–ø–Ω—ã—Ö –≤–∞–ª—é—Ç'.–§—É–Ω–∫—Ü–∏—è –≤–æ–∑–≤—Ä–∞—â–∞–µ—Ç —Å—Ç—Ä–æ–∫—É –≤ –Ω—É–∂–Ω–æ–º –≤–∏–¥–µ.
//   –ü—Ä–∏–º–µ—Ä:
// availableCurr(['UAH', 'RUB', 'CNY'], 'CNY')
// –í–µ—Ä–Ω–µ—Ç —Å—Ç—Ä–æ–∫—É:
// –î–æ—Å—Ç—É–ø–Ω—ã–µ –≤–∞–ª—é—Ç—ã:
// UAH
// RUB
// –ó–∞–º–µ—Ç—å—Ç–µ:
// - CNY(—é–∞–Ω—å) –∏—Å—á–µ–∑ –∏–∑ —Å–ø–∏—Å–∫–∞ –≤–∞–ª—é—Ç, –∑–Ω–∞—á–∏—Ç —Ç–∞–∫–∞—è –≤–∞–ª—é—Ç–∞ –∑–∞–∫–æ–Ω—á–∏–ª–∞—Å—å
//   - –ü–æ—Å–ª–µ –≤–∞–ª—é—Ç—ã: —Å—Ç–æ–∏—Ç –ø–µ—Ä–µ–Ω–æ—Å —Å—Ç—Ä–æ–∫–∏ \n, –∏ –ø–æ—Å–ª–µ –∫–∞–∂–¥–æ–π –≤–∞–ª—é—Ç—ã —Ç–æ–∂–µ.–≠—Ç–æ –≤–∞–∂–Ω–æ –¥–ª—è —Ç–µ—Å—Ç–æ–≤
//     - –î–∞–Ω–Ω—ã–µ –¥–ª—è –ø–µ—Ä–≤–æ–≥–æ –∞—Ä–≥—É–º–µ–Ω—Ç–∞ –¥–æ–ª–∂–Ω—ã –ø—Ä–∏—Ö–æ–¥–∏—Ç—å —Å—Ä–∞–∑—É –∏–∑ –¥–≤—É—Ö –±–∞–Ω–∫–æ–≤, –ø—Ä–∏—á–µ–º —Å–Ω–∞—á–∞–ª–∞ baseCurrencies, –ø–æ—Ç–æ–º additionalCurrencies –ø–æ –ø–æ—Ä—è–¥–∫—É

// const baseCurrencies = ['USD', 'EUR'];
// const additionalCurrencies = ['UAH', 'RUB', 'CNY'];

// function availableCurr(arr, missingCurr) {
//   let str = '';
//   arr.length === 0 ? str = '–ù–µ—Ç –¥–æ—Å—Ç—É–ø–Ω—ã—Ö –≤–∞–ª—é—Ç' : str = '–î–æ—Å—Ç—É–ø–Ω—ã–µ –≤–∞–ª—é—Ç—ã:\n';

//   arr.forEach(function (curr, i) {
//     if (curr !== missingCurr) {
//       str += `${curr}\n`;
//     }
//   });

//   // –ò–ª–∏
//   // for (let i = 0; i < arr.length; i++) {
//   //     if (arr[i] === missingCurr) {
//   //         continue;
//   //     }
//   //     str += `${arr[i]}\n`;
//   // }

//   return str;
// }

// console.log(availableCurr([...baseCurrencies, ...additionalCurrencies], 'RUB'))

// --------------------------–ü–†–û–¢–û–¢–ò–ü–ò------------------------------------

// const soldier = {
//   heltch: 400,
//   armor: 100,
//   sayHello: function () {
//     console.log("Hello")
//   }
// };
// const jonh = {
//   heltch: 100
// };

// jonh.__proto__ = soldier; // –ù–ï –í–ò–ö–û–†–ò–°–¢–û–í–£–í–ê–¢–ò

// Object.setPrototypeOf(jonh, soldier);      // –ù–∞—Å–ª—ñ–¥—É–≤–∞–Ω–Ω—è –ø—Ä–æ—Ç–æ—Ç–∏–ø—É

// const jonh = Object.create(soldier);          //–°–¢–í–û–†–ï–ù–ù–Ø –ü–†–û–¢–û–¢–ò–ü–£

// console.log(jonh.armor);
// jonh.sayHello();


// ------------------------------------------------------------------–ó–ê–î–ê–ß–ê------------------------------------------------

// –ó–∞–¥–∞—á–∞:
// –£ –≤–∞—Å –µ—Å—Ç—å –Ω–µ–±–æ–ª—å—à–æ–π –∫—É—Å–æ—á–µ–∫ –¥–∞–Ω–Ω—ã—Ö –æ —Ç–æ—Ä–≥–æ–≤–æ–º —Ü–µ–Ω—Ç—Ä–µ, –∫–æ—Ç–æ—Ä—ã–µ –∑–∞–ø–∏—Å–∞–Ω—ã –≤ –æ–±—ä–µ–∫—Ç–µ shoppingMallData.–û–Ω–∏ —Å–æ–¥–µ—Ä–∂–∞—Ç –º–∞—Å—Å–∏–≤ —Å –¥–∞–Ω–Ω—ã–º–∏ –æ –º–∞–≥–∞–∑–∏–Ω–∞—Ö, –≥–¥–µ —É–∫–∞–∑–∞–Ω–∞ –¥–ª–∏–Ω–∞ –∏ —à–∏—Ä–∏–Ω–∞ –ø–æ–º–µ—â–µ–Ω–∏—è; –≤—ã—Å–æ—Ç—É –ø–æ–º–µ—â–µ–Ω–∏—è; —Å—Ç–æ–∏–º–æ—Å—Ç—å –æ—Ç–æ–ø–ª–µ–Ω–∏—è –∑–∞ 1 –∫—É–±–∏—á–µ—Å–∫–∏–π –º–µ—Ç—Ä –∏ –±—é–¥–∂–µ—Ç –Ω–∞ –æ–ø–ª–∞—Ç—É –æ—Ç–æ–ø–ª–µ–Ω–∏—è –∑–∞ –º–µ—Å—è—Ü.
// –û—Å–Ω–æ–≤–Ω–∞—è –∑–∞–¥–∞—á–∞ - —ç—Ç–æ –Ω–∞–ø–∏—Å–∞—Ç—å —Ñ—É–Ω–∫—Ü–∏—é isBudgetEnough, –∫–æ—Ç–æ—Ä–∞—è –±—É–¥–µ –≤–æ–∑–≤—Ä–∞—â–∞—Ç—å —Å—Ç—Ä–æ–∫—É.–ï—Å–ª–∏ –±—é–¥–∂–µ—Ç–∞ —Ö–≤–∞—Ç–∞–µ—Ç –¥–ª—è –æ—Ç–æ–ø–ª–µ–Ω–∏—è –≤—Å–µ–≥–æ –æ–±—ä–µ–º–∞ —Ç–æ—Ä–≥–æ–≤–æ–≥–æ —Ü–µ–Ω—Ç—Ä–∞ - –≤—ã–≤–æ–¥–∏—Ç—Å—è '–ë—é–¥–∂–µ—Ç–∞ –¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ', –µ—Å–ª–∏ –Ω–µ—Ç - '–ë—é–¥–∂–µ—Ç–∞ –Ω–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ'.–ò –≤—Å–µ üôÇ
// –ù–æ —ç—Ç–∞ –∑–∞–¥–∞—á–∞ —Å–æ–¥–µ—Ä–∂–∏—Ç –Ω–µ—Å–∫–æ–ª—å–∫–æ –ø–æ–¥–∑–∞–¥–∞—á –≤–Ω—É—Ç—Ä–∏:
// - –≤—ã—á–∏—Å–ª–µ–Ω–∏–µ –æ–±—â–µ–π –ø–ª–æ—â–∞–¥–∏ –≤—Å–µ—Ö –º–∞–≥–∞–∑–∏–Ω–æ–≤, –∫–æ—Ç–æ—Ä–∞—è –≤—ã—á–∏—Å–ª—è–µ—Ç—Å—è –∫–∞–∫ –¥–ª–∏–Ω–∞ –º–∞–≥–∞–∑–∏–Ω–∞, —É–º–Ω–æ–∂–µ–Ω–Ω–∞—è –Ω–∞ –µ–≥–æ —à–∏—Ä–∏–Ω—É;
// - –≤—ã—á–∏—Å–ª–µ–Ω–∏–µ –æ–±—â–µ–≥–æ –æ–±—ä–µ–º–∞ —Ç–æ—Ä–≥–æ–≤–æ–≥–æ —Ü–µ–Ω—Ç—Ä–∞, —Ç–∞–∫ –∫–∞–∫ —Ü–µ–Ω–∞ –æ—Ç–æ–ø–ª–µ–Ω–∏—è —É–∫–∞–∑–∞–Ω–∞ –≤ –∫—É–±–∏—á–µ—Å–∫–∏—Ö –º–µ—Ç—Ä–∞—Ö;
// - –æ–ø—Ä–µ–¥–µ–ª–µ–Ω–∏–µ —Ç–æ–≥–æ, —Ö–≤–∞—Ç–∞–µ—Ç –ª–∏ –±—é–¥–∂–µ—Ç–∞ –Ω–∞ –æ–ø–ª–∞—Ç—É —Ç–∞–∫–æ–≥–æ –æ–±—ä–µ–º–∞;
// - –≤—Å–µ —á–∏—Å–ª–∞ –∏–¥—É—Ç –±–µ–∑ –µ–¥–∏–Ω–∏—Ü –∏–∑–º–µ—Ä–µ–Ω–∏—è –¥–ª—è —É–ø—Ä–æ—â–µ–Ω–∏—è, –ø—Ä–æ—Å—Ç–æ —Ü–∏—Ñ—Ä—ã –∏ –≤—Å–µ;
// - —Ñ—É–Ω–∫—Ü–∏—è –¥–æ–ª–∂–Ω–∞ –ø—Ä–æ–¥–æ–ª–∂–∞—Ç—å —Ä–∞–±–æ—Ç–∞—Ç—å, –¥–∞–∂–µ –µ—Å–ª–∏ –∏–∑–º–µ–Ω—è–µ—Ç—Å—è –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –º–∞–≥–∞–∑–∏–Ω–æ–≤, –≤—ã—Å–æ—Ç–∞, –±—é–¥–∂–µ—Ç –∏–ª–∏ –ø–æ–¥—Å—Ç–∞–≤–ª—è–µ—Ç—Å—è –≤–æ–æ–±—â–µ –¥—Ä—É–≥–æ–π –æ–±—ä–µ–∫—Ç.


// const shoppingMallData = {
//   shops: [
//     {
//       width: 10,
//       length: 5
//     },
//     {
//       width: 15,
//       length: 7
//     },
//     {
//       width: 20,
//       length: 5
//     },
//     {
//       width: 8,
//       length: 10
//     }
//   ],
//   height: 5,
//   moneyPer1m3: 10,
//   budget: 50000

// };

// function isBudgetEnough(data) {
//   let volume = 0;
//   let sShop = 0;

//   data.shops.forEach(shop => {
//     sShop += shop.width * shop.length;
//   });
//   volume = sShop * data.height;
//   if ((volume * data.moneyPer1m3) - data.budget >= 0) {
//     return '–ë—é–¥–∂–µ—Ç–∞ –Ω–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ';
//   } else {
//     return '–ë—é–¥–∂–µ—Ç–∞ –¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ';
//   }
// };

// console.log(isBudgetEnough(shoppingMallData));

// -------------------------------------------------------------

// –ó–∞–¥–∞—á–∞:

// // –£ –≤–∞—Å –µ—Å—Ç—å —Å–ø–∏—Å–æ–∫ —É—á–µ–Ω–∏–∫–æ–≤, –∫–æ—Ç–æ—Ä—ã–µ —Ö–æ—Ç—è—Ç –ø–æ–∏–≥—Ä–∞—Ç—å –≤ –∏–≥—Ä—É:
// const students = ['Peter', 'Andrew', 'Ann', 'Mark', 'Josh', 'Sandra', 'Cris', 'Bernard', 'Takesi', 'Sam'];
// // –ù–æ –∫–æ–º–∞–Ω–¥ –º–æ–∂–µ—Ç –±—ã—Ç—å —Ç–æ–ª—å–∫–æ 3 –ø–æ 3 —á–µ–ª–æ–≤–µ–∫–∞.–ù–∞–ø–∏—à–∏—Ç–µ —Ñ—É–Ω–∫—Ü–∏—é sortStudentsByGroups, –∫–æ—Ç–æ—Ä–∞—è –ø—Ä–∏–Ω–∏–º–∞–µ—Ç –≤ —Å–µ–±—è –º–∞—Å—Å–∏–≤ —Å—Ç—Ä–æ–∫.
// // –í–Ω—É—Ç—Ä–∏ –æ–Ω–∞ —Å–Ω–∞—á–∞–ª–∞ —Å–æ—Ä—Ç–∏—Ä—É–µ—Ç –∏–º–µ–Ω–∞ –ø–æ –∞–ª—Ñ–∞–≤–∏—Ç—É.–ó–∞—Ç–µ–º —Ä–∞—Å–ø—Ä–µ–¥–µ–ª—è–µ—Ç —É—á–µ–Ω–∏–∫–æ–≤ –ø–æ 3 —á–µ–ª–æ–≤–µ–∫–∞ –≤ 3 –≥—Ä—É–ø–ø—ã –ø–æ –∞–ª—Ñ–∞–≤–∏—Ç–Ω–æ–º—É –ø–æ—Ä—è–¥–∫—É.–≠—Ç–∏ –≥—Ä—É–ø–ø—ã –¥–æ–ª–∂–Ω—ã –±—ã—Ç—å –º–∞—Å—Å–∏–≤–∞–º–∏.–ö–∞–∫ –∏—Ç–æ–≥, —Ñ—É–Ω–∫—Ü–∏—è –≤–æ–∑–≤—Ä–∞—â–∞–µ—Ç –Ω–æ–≤—ã–π –º–∞—Å—Å–∏–≤ —Å —Ç—Ä–µ–º—è –∫–æ–º–∞–Ω–¥–∞–º–∏ –∏ —Å—Ç—Ä–æ–∫–æ–π –∫–∞–∫ 4–π —ç–ª–µ–º–µ–Ω—Ç.
// //   –ü—Ä–∏–º–µ—Ä:
// sortStudentsByGroups(students)  =>
// [
//   ['Andrew', 'Ann', 'Bernard'],
//   ['Cris', 'Josh', 'Mark'],
//   ['Peter', 'Sam', 'Sandra'],
//   '–û—Å—Ç–∞–≤—à–∏–µ—Å—è —Å—Ç—É–¥–µ–Ω—Ç—ã: Takesi'
// ]
// // –ï—Å–ª–∏ —É–±—Ä–∞—Ç—å –æ–¥–Ω–æ —Å—Ç—É–¥–µ–Ω—Ç–∞ –∏–∑ —Å–ø–∏—Å–∫–∞, —Ç–æ —Ä–µ–∑—É–ª—å—Ç–∞—Ç –±—É–¥–µ—Ç:

// [
//   ['Andrew', 'Ann', 'Bernard'],
//   ['Cris', 'Josh', 'Mark'],
//   ['Peter', 'Sam', 'Sandra'],
//   '–û—Å—Ç–∞–≤—à–∏–µ—Å—è —Å—Ç—É–¥–µ–Ω—Ç—ã: -'
// ]
// // –ê –µ—Å–ª–∏ –¥–æ–±–∞–≤–∏—Ç—å –æ–¥–Ω–æ–≥–æ, —Ç–æ:

// [
//   ['Andrew', 'Ann', 'Bernard'],
//   ['Cris', 'Josh', 'Mark'],
//   ['Peter', 'Sam', 'Sandra'],
//   '–û—Å—Ç–∞–≤—à–∏–µ—Å—è —Å—Ç—É–¥–µ–Ω—Ç—ã: Takesi, Somebody'
// ];

// –¢–æ –µ—Å—Ç—å, –º–µ–Ω—è–µ—Ç—Å—è —Å–æ–¥–µ—Ä–∂–∏–º–æ–µ —Å—Ç—Ä–æ–∫–∏.–í—Å–µ –æ—Å—Ç–∞–≤—à–∏–µ—Å—è —É—á–µ–Ω–∏–∫–∏ –ø–æ–ø–∞–¥–∞—é—Ç —Ç—É–¥–∞.
// –ó–∞–¥–∞—á–∞ –∏–Ω—Ç–µ—Ä–µ—Å–Ω–∞—è, –Ω–µ–º–Ω–æ–≥–æ –∑–∞–∫–æ–≤—ã—Ä–∏—Å—Ç–∞—è, –Ω–æ –≤—Å–µ –Ω–µ–æ–±—Ö–æ–¥–∏–º–æ–µ –¥–ª—è –Ω–µ—ë –º—ã —É–∂–µ –ø—Ä–æ—Ö–æ–¥–∏–ª–∏.–ü—Ä–æ—Å—Ç–æ —Ä–∞—Å–ø–∏—à–∏—Ç–µ –ª–æ–≥–∏–∫—É –¥–µ–π—Å—Ç–≤–∏–π —Å—Ç—Ä–æ–∫–∞ –∑–∞ —Å—Ç—Ä–æ–∫–æ–π.

// const students = ['Peter', 'Andrew', 'Ann', 'Mark', 'Josh', 'Sandra', 'Cris', 'Bernard', 'Takesi', 'Sam', 'Ann', 'Mark', 'Josh', 'Sandra'];

// function sortStudentsByGroups(arr) {
//   arr.sort();
//   const a = [];
//   b = [];
//   c = [];
//   d = [];
//   for (let i = 0; i < arr.length; i++) {
//     if (i < 3) {
//       a.push(arr[i]);
//     } else if (i < 6) {
//       b.push(arr[i]);
//     } else if (i < 9) {
//       c.push(arr[i]);
//     } else {
//       d.push(arr[i])
//     }
//   }
//   return [a, b, c, `–û—Å—Ç–∞–≤—à–∏–µ—Å—è —Å—Ç—É–¥–µ–Ω—Ç—ã: ${d.length === 0 ? '-' : d.join(', ')}`];
// };
// console.log(sortStudentsByGroups(students));

// -----------------------------------–î–ò–ù–ê–ú–Ü–ß–ù–ê –¢–ò–ü–Ü–ó–ê–¶–Ü–Ø-------------------------------------
//  TO STRING
// 1)
// console.log(typeof (String(5)));
// 2)
// console.log(typeof (5 + ''));
// const num = 5;
// console.log("http://facebook/catalog" + num);
// 3)
// const fontSize = 26 + 'px';
// console.log(typeof (fontSize));

// // To Number

// 1)
// console.log(typeof (Number("6595")))
// 2)
// console.log(+'5' + 5);
// 3)
// console.log(typeof (parseInt("15px", 10)));

// TO BOOLEAN

// 0, '', null, undefined, NaN;

//  1)
// let switcher = null;
// if (switcher) {
//   console.log('Working...')
// }

// switcher = 1;
// if (switcher) {
//   console.log('Working...')
// }

// // 2)
// console.log(typeof (Boolean('4')));

// // 3)
// console.log(typeof (!!'5'));

// --------------------–ó–ê–ú–ò–ö–ê–ù–ò–ï –õ–ï–ö–°–ò–ß–ï–°–ö–û–ì–û –û–ö–†–£–ñ–ï–ù–ò–Ø-------------------

// let number = 5; debugger;

// function logNumber() {
//   let number = 4; debugger;
//   console.log(number);
// }

// number = 6;

// logNumber(); debugger;


// –ß—Ç–æ –±—É–¥–µ—Ç —Å–æ–¥–µ—Ä–∂–∞—Ç—å—Å—è –≤ –ø–µ—Ä–µ–º–µ–Ω–Ω–æ–π result –ø–æ—Å–ª–µ –∑–∞–≤–µ—Ä—à–µ–Ω–∏—è –∫–æ–¥–∞ ?

// function foo(a, b) {
//   const [first] = a;
//   const { eng } = b;

//   return `${first} ${eng}`;
// }

// const result = foo(['Hello', '–ü—Ä–∏–≤–µ—Ç'], { ru: '–ú–∏—Ä', eng: 'World' });
// console.log(result)


// –ß—Ç–æ –≤–∞–º —Å–ª–µ–¥—É–µ—Ç –ø—Ä–æ–≤–µ—Ä–∏—Ç—å
// –õ–µ–∫—Ü–∏—è 25 –§—É–Ω–∫—Ü–∏–∏, —Å—Ç—Ä–µ–ª–æ—á–Ω—ã–µ —Ñ - —Ü–∏–∏(ES6)
// –õ–µ–∫—Ü–∏—è 33 –ú–∞—Å—Å–∏–≤—ã –∏ –ø—Å–µ–≤–¥–æ–º–∞—Å—Å–∏–≤—ã
// –õ–µ–∫—Ü–∏—è 28 –ú–µ—Ç–æ–¥—ã –∏ —Å–≤–æ–π—Å—Ç–≤–∞ —Å—Ç—Ä–æ–∫ –∏ —á–∏—Å–µ–ª
// –õ–µ–∫—Ü–∏—è 22 –¶–∏–∫–ª—ã
// –õ–µ–∫—Ü–∏—è 20 –£—Å–ª–æ–≤–∏—è



// -----------------------------------------------------------------------------------------------

